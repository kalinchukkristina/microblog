- name: Install Nginx
  apt:
    name: nginx
    state: present

- name: Install Certbot
  apt:
    name: python3-certbot-nginx
    state: present

- name: Remove default Nginx site configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Obtain SSL Certificates
  shell: |
    certbot --nginx -d {{ domain_name }} -d www.{{ domain_name }} --non-interactive --agree-tos --email krka213@student.bth.se --redirect
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}

- name: Configure nginx.conf
  template:
    src: files/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - Reload Nginx

- name: Configure load-balancer.conf
  template:
    src: files/load-balancer.conf.j2
    dest: /etc/nginx/sites-available/load-balancer.conf
  notify:
    - Reload Nginx

- name: Create symbolic link to sites-enabled
  file:
    src: /etc/nginx/sites-available/load-balancer.conf
    dest: /etc/nginx/sites-enabled/load-balancer.conf
    state: link
  notify:
    - Reload Nginx

- name: Run nginx-prometheus-exporter in Docker
  docker_container:
    name: nginx-prometheus-exporter
    image: nginx/nginx-prometheus-exporter:0.4.2
    restart_policy: always
    state: started
    ports:
      - "9113:9113"
    env:
      nginx_scrape_uri: "https://{{ domain_name }}/metrics"
      nginx_retries: "10"
      nginx_ssl_verify: "false"
      web_telemetry_path: "/prometheus"
    command: "--nginx.scrape-uri=https://{{ domain_name }}/metrics --nginx.retries=10 --nginx.ssl-verify=false --web.telemetry-path=/prometheus"

- name: Create directory for Promtail configuration
  file:
      path: /promtail
      state: directory

- name: Copy promtail config file to the server
  template:
      src: files/promtail-config.yml
      dest: /promtail/promtail-config.yml
      mode: 0644

- name: Start Promtail container
  docker_container:
    name: promtail
    image: grafana/promtail:latest
    volumes:
      - /promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
    detach: true
    restart_policy: always
    state: started